from SOAP.decoys import *


#define the paths for the decoys
workingPath='/bell2/gqdong/rawdecoyfiles/pep/'
originalDecoyPath=os.path.join(workingPath,'mhc2_original')
preparedDecoyPath=os.path.join(workingPath,'mhc2/')
decoySetName='mhc2'

#copy the files from originalDecoyPath to target Path
"""The pre-prepared decoys directory should looks like the following:
    root:
        decoySet1: could use the PDB code of the receptor here
            Decoy files
            [*base*]: if this file is present in this directory, it should be the receptor file shared by all decoys, and the final decoys are generated by combining this
            rmsd.pickle
        decoySet2
        ...
"""
fl=os.listdir(originalDecoyPath)
for f in fl:
    if not os.path.isdir(os.path.join(originalDecoyPath,f)):
        continue
    print os.system('rm -rf '+os.path.join(preparedDecoyPath,f))
    os.mkdir(os.path.join(preparedDecoyPath,f))
    os.chdir(os.path.join(preparedDecoyPath,f))
    print os.system('cp '+os.path.join(originalDecoyPath,f,'selected_peptides','*')+' ./')
    print os.system('mv pMHC_'+f+'.pdb base.pdb')
    print os.system('touch needattachtobase')
    rl=open(os.path.join(originalDecoyPath,f,'all_scores.txt')).read().split('\n')
    rmsddict={}
    scoredict={}
    for item in rl:
        if len(item)<10:
            continue
        il=item.split(',')
        rmsddict[il[0].strip()[:-4]]=float(il[2])
        scoredict[il[0].strip()[:-4]]=float(il[1])
    pickle.dump(rmsddict,open('rmsd.pickle','w'))
    pickle.dump(scoredict,open('score.pickle','w'))
        
print os.system('rm -rf '+os.path.join('/bell3/gqdong/statpot/Decoys/mhc2'))

#the decoys are now in the format that SOAP can process, use SOAP.decoys to build the decoyset
do=decoyset(dsname=decoySetName, sourcedir=preparedDecoyPath)
do.build()
pdb.set_trace()
    
